Задачи

Подготовка и хранение информации и выдача для печати конвертов
- получить задание на печать в виде инн отправителя, инн получателя
- используя внешее API получить информацию об отправителе и получателе по их ИНН
- преобразовать полученную информацию для вывода на печать
- сохранить информацию в базе для повторного использования
- выдать готовую информацию по запросу

Команды API выдаются со внешнего сервера, но 
На сервере нужна страница HTML, что бы выдавать запросы без внешнего сервера
в корне сайта 3 файла index.html, style.css, script.js

Порядок работы
1) админ  добавляет разрешенные api_key, команда 'new_api_key'
2) используя api_key пользователь регистрирует группу  group (произвольное имя, групп можно создать неограниченное количество), команда 'new_group'
3) используя api_key и  group, пользователь отправляет (добавляет к существующему) задание на печать.  объект пар значений, инн отправителя и инн получателя, команда 'add_task' (группа имеет только одно задание = массив )
	по этой команде сервер проверяет инн в своей базе, если данных нет, то используя внешнее API получает информацию о компании по инн, преобразует ее функцией convert() (подробнее, внизу ТЗ) и добапвляет ее в свою базу
	информацию о компаниях отправителе и получателе сервер добавляет в массив задания.
4)  используя name и  group, пользователь получает готовое задание на печать, команда 'read_task'
	по этой команде сервер возвращает массив задания пользователю и очищает его у себя
5) абонент может сохранить настройки печати полей, команда 'write_setting'
	по этой команде сервер сохраняет объект настроек для group под произвольным названием name_setting, если назание уже есть то настройки перезаписываются
6) абонент может получить все настройки группы для печати полей, команда 'read_settings'
	по этой команде сервер отправляет setting, объект объектов настроек для group
7) абонент может получить список групп, команда 'read_list'
	по этой команде сервер отправляет список групп для name
8) абонент может редактировать информацию о компании, команда 'edit_info'
	по этой команде сервер перезаписывает информацию о компании в своей базе
	Важно!	редактировать можно только свойства post_address и contact
	если в запросе свойство не указано, то оно не редактируется

Объекты
Задание
task:[{},{},{}]
объект в массиве task
{
	from:{inn:7802080155},
	to:{inn:6914020145}
}

full_task:[{},{},{}]
объект в массиве full_task
{
	from:{
		inn:7802080155,
		info:'Москва, 3-я улица строителей, д. 15 кв. 15',
		post_address:'Москва, Бульвар новаторов, д. 3 кв. 4',
		contact:'Вася'
	},
	to:{
		inn:6914020145,
		info:'Санкт-Петербург, 3-я улица строителей, д. 15 кв. 15',
		post_address:'',
		contact:'Коля'
	}
}

объект объектов настроек для group
setting:{
	dl:{}, //dl - название объекта настроек
	ad:{}
}



Таблицы 

api_keys - список разрешенных ключей
	name - первычный ключ
	api_key

groups  - список групп
	group - первычный ключ
	task - JSON строка массива задания
	name - имя из таблицы api_keys 
	(в запросе отправляет api_key, а в таблицу вставляется name - это , что бы иметь возможность менять api_key)

settings 
	group
	name_setting
	setting - JSON строка объекта настроек

companies
	inn
	info - JSON строка объекта информации о компании
	post_address 
	contact - JSON строка объекта информации о контактных данных сотрудника
	


ПРОТОКОЛ

Регистрация группы
объект запроса
{
	api_key:'2345678',
	command:'new_group',
	data: {
		group: 'helen',
	}
}
объект ответа
{
	command:'new_app',	
	data: {
		group: 'helen',
		result: 'edit', ('new')
	}
}



Отправить задание
объект запроса
{
	api_key:'2345678',
	command:'add_task',
	data: {
		group: 'helen',
		task: [{},{},{}],
	}
}
объект ответа
{
	command:'add_task',
	data: {
		group: 'helen',
		result: 'add',
	}
}


Прочитать задание
объект запроса
{
	api_key:'2345678',
	command:'read_task',
	data: {
		group: 'helen',
	}
}
объект ответа
{
	command:'read_task',
	data: {
		full_task: [{},{},{}],
		// full_task - это task + информация о компаниях
	}
}

Отправить настройки печати
объект запроса
{
	api_key:'2345678',
	command:'write_setting',
	data: {
		group: 'helen',
		name_setting: 'dl'
		setting: '{......}',
	}
}
объект ответа
{
	command:'write_setting',
	data: {
		group: 'helen',
		name_setting: 'dl'
		result: 'edit', ('new')
	}
}

Получить все настройки печати для группы
объект запроса
{
	api_key:'2345678',
	command:'read_settings',
	data: {
		group: 'helen',
	}
}
объект ответа
{
	command:'read_settings',
	data: {
		group: 'helen',
		settings: '{a:{},dl:{}}', (объект всех объектов настроек  для group)
	}
}




получить список групп
объект запроса
{
	api_key:'2345678',
	command:'read_list',
	data: {}  
}
объект ответа
{
	command:'read_list',
	data: {
		list:[.....]
	}
}

Редактировать информацию о компании
объект запроса
{
	api_key:'2345678',
	command:'edit_info',
	data: {
		inn:34567890,
		post_address:'Москва, 3-я улица строителей, д. 15 кв. 15',
		contact: '{}'
	}  
}
объект ответа
{
	command:'edit_info',
	data: {
		inn:34567890
	}
}

добавить(изменить) разрешенный api_key 
объект запроса
{
	admin_key:'74965',
	command:'new_api_key',
	data: {
		name: 'vasa',
		api_key: '5286'
	}
}
объект ответа
{
	command:'new_api_key',	
	data: {
		name: 'vasa',
		result: 'edit', ('new')
	}
}

удалить name 
объект запроса
{
	admin_key:'74965',
	command:'dell_name',
	data: {
		name: 'vasa',
	}
}
объект ответа
{
	command:'dell_name',	
	data: {
		name: 'vasa',
		result: 'dell'
	}
}

внешнее API
var url = "https://suggestions.dadata.ru/suggestions/api/4_1/rs/findById/party";
var token = "204edbf3512158dda25c80a17936b2d44bb20b03";
var options = {
    method: "POST",
    mode: "cors",
    headers: {
        "Content-Type": "application/json",
        "Accept": "application/json",
        "Authorization": "Token " + token
    },
    body: 0//JSON.stringify({query: query})
}
function asd(inn, fnk){
	options.body=JSON.stringify({query: inn})
	fetch(url, options)
	.then(response => response.text())
	.then(result => control[fnk](result))
	.catch(error => console.log("error", error));
}

convert(inn) функция - получает по inn объект с информацией о компании и возвращает новый объект, список  свойств ниже

входной объект
obj - объект ответа с информацией  о компании (получаемый)
dd=obj.suggestions[0].data;

свойства выходного обекта
inn - ИНН из запроса
name_company - dd.name.short_with_opf || dd.name.short || dd.name.full
postal_code - dd.address.data.postal_code
address - dd.address.value || dd.address.unrestricted_value || dd.address.data.source
обозначение -  || - или, сначала первое значение, если его нет, то следующее за ||
итоговый объект
{
	name_company:'Рога и Копыта',
	postal_code:'195008',
	address:'Москва, 3-я улица строителей, д. 15 кв. 15'
}



token к внешнему API  - хранится прямо в коде сервера в виде объявления переменной
admin_key - хранится прямо в коде сервера в виде объявления переменной
