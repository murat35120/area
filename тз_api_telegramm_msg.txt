Задачи

Рассылка оповещений через телеграмм 
- подписка на телеграмм канал 
- отправка сообщений (трансляция)
данные храним в базе mysql

Порядок работы
1) админ  добавляет разрешенные api_key, команда 'new_api_key'
2) используя api_key экземпляр приложения получает личную session, команда 'new_app'
3) используя session, приложение регистрирует абонента за 2 шага.  Первый шаг это получение chek_code, команда 'new_abonent'
4) абонент самостоятельно подписывается на телеграмм канал и отправляет chek_code
5) от Telegramm  приходит сообщение chek_code от абонента chat_id. 2 варианта запрос и хук (нужны оба варианта),  на сервере Telegramm командой Update //https://tlgrm.ru/docs/bots/api#sendmessage
6) сервер добавляет запись в таблицу abonents и  удаляет соответставующую из таблицы codes  (коды для которых получен ответ ) 
7) Второй шаг. Приложение отправляет запрос серверу  read_abonent_list и получает chek_code  и chat_id
8) приложение используя session  и chat_id   отправляет сообщение серверу
9) сервер используя chat_id отправляет сообщение в Telegramm командой sendMessage
везде используем post

Таблицы 

api_keys - список разрешенных ключей
	name - первычный ключ
	api_key

sessions  - список сессий
	session - первычный ключ
	id - справочная информация о приложении

	
abonents - список абонентов 
	chat_id - первычный ключ
	session
	chek_code

codes - список кодов для регистрации абонентов (данные хранятся до получения ответа - chat_id) 
	chek_code
	session

ПРОТОКОЛ

Регистрация приложения
объект запроса
{
	api_key:'2345678',
	command:'new_app',
	data: {
		id: '65476538'
	}
}
объект ответа
{
	command:'new_app',	
	data: {
		id: '65476538'
		session: '3456324567'
	}
}
	session - действует до нового запроса на регистрацию приложения


регистрвция абонента
объект запроса
{
	session: '3456324567'
	command:'new_abonent',
	data: {}
}
объект ответа
{
	command:'new_abonent',	
	data: {
		chek_code:'342567'
	}
}
	chek_code -  случайное число 6 знаков, создает сервер


получить список новых подписанных абонентов
объект запроса
{
	session: '3456324567'
	command:'read_abonent_list',
	data: {
		list:['342567', '452976']  //список chek_code по которым приложение еще не получило chat_id
	}  
}
объект ответа
{
	command:'read_abonent_list',	
	data: {
		list:[
			{chek_code:'342567', chat_id:'654764764'},
			{chek_code:'452976', chat_id:'654097865'}
		]
	}
}

отправить сообщение 
объект запроса
{
	session: '3456324567'
	command:'send_msg',
	data: {
		chat_id:'654764764',
		text_msg:'Hello World!'
	}
}
объект ответа
{
	command:'send_msg',	
	data: {
		chat_id:'654764764',
		result: 'ok'
	}
}

добавить(изменить) разрешенный api_key 
объект запроса
{
	admin_key:'74965',
	command:'new_api_key',
	data: {
		name: 'vasa',
		api_key: '5286'
	}
}
объект ответа
{
	command:'new_api_key',	
	data: {
		name: 'vasa',
		result: 'edit', ('new')
	}
}

удалить name 
объект запроса
{
	admin_key:'74965',
	command:'dell_name',
	data: {
		name: 'vasa',
	}
}
объект ответа
{
	command:'dell_name',	
	data: {
		name: 'vasa',
		result: 'dell'
	}
}

admin_key - хранится прямо в коде сервера в виде объявления переменной

отправка сообщений в телеграмм
1)
2)

регистрация сервера в телеграмм
получение хук от телеграмм